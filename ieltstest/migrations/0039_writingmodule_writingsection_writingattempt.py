# Generated by Django 4.2.3 on 2023-08-19 20:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import randomslugfield.fields


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('ieltstest', '0038_readingsection_question_type'),
    ]

    operations = [
        migrations.CreateModel(
            name='WritingModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', randomslugfield.fields.RandomSlugField(blank=True, editable=False, length=20, max_length=20, unique=True)),
                ('test_type', models.CharField(choices=[('academic', 'Academic'), ('general', 'General'), ('both', 'Both')], help_text='What is test type for this?', max_length=200)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('in-progress', 'In Progress'), ('error-check', 'Perform Error Check'), ('error-found', 'Error Found'), ('published', 'Published'), ('discard', 'Discard')], help_text='What is current status of this test?', max_length=200)),
                ('name', models.CharField(help_text='e.g. Listening Test March 2023', max_length=200)),
                ('total_questions', models.PositiveIntegerField(default=0, help_text='How many questions are there in this module?')),
                ('test', models.OneToOneField(help_text='Select Parent Test', on_delete=django.db.models.deletion.CASCADE, to='ieltstest.test')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WritingSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.CharField(choices=[('Section 1', 'Section 1'), ('Section 2', 'Section 2'), ('Section 3', 'Section 3'), ('Section 4', 'Section 4')], help_text='What is section type?')),
                ('name', models.CharField(help_text='Test ideentifier name. e.g. Art and Science', max_length=200)),
                ('total_questions', models.PositiveIntegerField(default=0, help_text='How many questions are there in this section?')),
                ('question_type', models.ForeignKey(help_text='Choose question type for this section', null=True, on_delete=django.db.models.deletion.CASCADE, to='ieltstest.questiontype')),
                ('writing_module', models.ForeignKey(help_text='Select parent writing module', on_delete=django.db.models.deletion.CASCADE, to='ieltstest.writingmodule')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WritingAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('slug', randomslugfield.fields.RandomSlugField(blank=True, editable=False, length=20, max_length=20, unique=True)),
                ('status', models.CharField(choices=[('In Progress', 'In Progress'), ('Completed', 'Completed'), ('Evaluated', 'Evaluated')], default='In Progress', help_text='What is currect status of this attempt?')),
                ('evaluation', models.JSONField(blank=True, help_text='Evaluation of the attempt', null=True)),
                ('time_taken', models.PositiveIntegerField(default=0, help_text='How much time did user take to complete the test? In minutes.')),
                ('bands', models.FloatField(default=0.0)),
                ('module', models.ForeignKey(help_text='Select Parent module for this attempt', on_delete=django.db.models.deletion.CASCADE, to='ieltstest.writingmodule')),
                ('user', models.ForeignKey(help_text='Select user for the attempt', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
